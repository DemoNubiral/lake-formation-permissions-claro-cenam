# This is the workflow file that will be used to create the Lake Formation permissions for the Lake Formation Data Lake.

name: Lake-Formation-Permissions-Workflow

on:
  push:
    branches:
      - main
      - dev
    paths:
      - 'code-permissions/**'
      - 'table-permissions/**'
      - 'database-permissions/**'

  workflow_dispatch:


concurrency:
  group: lake-formation-permissions
  cancel-in-progress: false


permissions:
  id-token: write
  contents: read
  issues: write
  pull-requests: write


env:
  AWS_REGION              : ${{ vars.aws_region }}
  AWS_ROLE                : ${{ secrets.AWS_ROLE }}


jobs:
  lake-formation-permissions:
    environment: dev
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code with full history
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM
      
      - name: Changed files
        id: changed-create-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            ./table-permissions/*.env
            ./database-permissions/*.env

      - name: Get info data
        id: get-info-data
        if: ${{ steps.changed-create-files.outputs.all_changed_files!= '' }}
        env:
            FILES: ${{ steps.changed-create-files.outputs.all_changed_files }}
        run: |
          mkdir -p variable-process
          for file in ${{ steps.changed-create-files.outputs.all_changed_files }}; do
            cp -r $file variable-process
          done
          ls -la ./variable-process/
          
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12.6'
  
      - name: Install Python requests
        run: |
          pip install boto3
          pip install python-dotenv

      - name: load env vars
        run: |
          ls -la ./variable-process/
          archivo=$(ls variable-process | head -n 1)
          echo "$archivo"
          cat ./variable-process/"$archivo" >> $GITHUB_ENV
          ##echo "./variable-process/'$archivo'" >> $GITHUB_ENV

      - name: print env vars
        run: |
          echo $PRINCIPAL_ARN
          echo $PERMISSIONS
          echo $PERMISSIONS_GRANT_OPTION
          echo $LF_TAGS
          echo $RESOURCE_TYPE
          echo $FLAG_PERMISSIONS

      - name: Run the Lake Formation permissions script
        run: |
          ls -la
          python3 code-permissions/permissions.py 


      